{"version":3,"sources":["useCheapState.js","App.js","index.js"],"names":["useClassState","initialState","useState","data","state","setState","useEffect","_____loaded","Object","keys","filter","key","forEach","temp","JSON","parse","stringify","props","call","Data","count","user","age","address","city","increment","console","log","changeCity","newCity","this","data1","App","subscribe","setCount","className","onClick","formatCount","rootElement","document","getElementById","ReactDOM","render"],"mappings":"2KACaA,G,MAAgB,SAACC,GAC5B,MAA0BC,mBAASD,EAAaE,MAAhD,mBAAOC,EAAP,KAAcC,EAAd,KACAC,qBAAU,WACHL,EAAaM,cAChBN,EAAaE,KAAOC,EACpBH,EAAaM,aAAc,EAC3BC,OAAOC,KAAKR,GACTS,QAAO,SAACC,GAAD,MAAiB,SAARA,KAChBC,SAAQ,SAACD,GACR,IAAIE,EAAOZ,EAAaU,GACxBV,EAAaU,GAAO,WAClBV,EAAaE,KAAOW,KAAKC,MAAMD,KAAKE,UAAUf,EAAaE,OAD3B,2BAAVc,EAAU,yBAAVA,EAAU,gBAEhCJ,EAAKK,KAAL,MAAAL,EAAI,CAAMZ,GAAN,OAAuBgB,IAC3BZ,EAASJ,EAAaE,gB,OCV5BgB,E,4DACJhB,KAAO,CACLiB,MAAO,EACPC,KAAM,CAAEC,IAAK,GAAIC,QAAS,CAAEC,KAAM,S,KAKpCC,UAAY,WAEVC,QAAQC,IAAI,aACZ,EAAKxB,KAAKiB,QACV,EAAKQ,WAAW,U,KAElBA,WAAa,SAACC,GACZH,QAAQC,IAAI,kBACZ,EAAKxB,KAAKkB,KAAKE,QAAQC,KAAOK,G,6CAXhC,WACE,MAAO,IAAMC,KAAK3B,KAAKiB,U,KAcvBjB,EAAO,IAAIgB,EACXY,EAAQ,IAAIZ,EAED,SAASa,IACtBC,EAAU9B,GACV8B,EAAUF,GAEV,MAAwB7B,mBAAS,GAAjC,mBAAKkB,EAAL,KAAYc,EAAZ,KACA,OACE,sBAAKC,UAAU,MAAf,UACE,wBACEC,QAAS,WACPhB,IACAc,EAASd,IAHb,SAMGA,IAEH,oBAAIgB,QAAS,kBAAMjC,EAAKsB,UAAU,KAAlC,+BACCtB,EAAKA,KAAKiB,MAVb,IAUqBjB,EAAKkC,YACxB,oBAAID,QAAS,kBAAML,EAAMN,UAAU,KAAnC,+BACCM,EAAM5B,KAAKiB,MAZd,IAYsBW,EAAMM,YAC1B,4ECzCN,IAAMC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACV,EAAD,MAEFM,K","file":"static/js/main.7593ece2.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\nexport const useClassState = (initialState) => {\n  const [state, setState] = useState(initialState.data);\n  useEffect(() => {\n    if (!initialState._____loaded) {\n      initialState.data = state;\n      initialState._____loaded = true;\n      Object.keys(initialState)\n        .filter((key) => key !== \"data\")\n        .forEach((key) => {\n          let temp = initialState[key];\n          initialState[key] = (...props) => {\n            initialState.data = JSON.parse(JSON.stringify(initialState.data));\n            temp.call(initialState, ...props);\n            setState(initialState.data);\n          };\n        });\n    }\n  });\n};\n","import \"./styles.css\";\nimport { useClassState as subscribe } from \"./useCheapState\";\nimport { useState } from \"react\";\n\nclass Data {\n  data = {\n    count: 0,\n    user: { age: 10, address: { city: \"Hyd\" } }\n  };\n  get formatCount() {\n    return \"$\" + this.data.count;\n  }\n  increment = () => {\n    debugger;\n    console.log(\"increment\");\n    this.data.count++;\n    this.changeCity(\"Delhi\");\n  };\n  changeCity = (newCity) => {\n    console.log(\"in change city\");\n    this.data.user.address.city = newCity;\n  };\n}\n\nlet data = new Data();\nlet data1 = new Data();\n\nexport default function App() {\n  subscribe(data);\n  subscribe(data1);\n\n  let [count, setCount] = useState(0);\n  return (\n    <div className=\"App\">\n      <button\n        onClick={() => {\n          count++;\n          setCount(count);\n        }}\n      >\n        {count}\n      </button>\n      <h1 onClick={() => data.increment(10)}>Hello CodeSandbox</h1>\n      {data.data.count} {data.formatCount}\n      <h1 onClick={() => data1.increment(10)}>Hello CodeSandbox</h1>\n      {data1.data.count} {data1.formatCount}\n      <h2>Start editing to see some magic happen!</h2>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}